
                    IMPORTANTE: Ya fué, voy a quitar la opción de poder buscar (poruqe es demasiado quilombo trabajar con ese sistema de paginado que tienen adheridos los resultados de las búsquedas). En cambio voy a hacer otro componente que sea un combobox o algo así que te permita elegir entre un par de directores de cine que a mí me gustan. Es una boludez pero por Dios, es re frustrante y confuso tratar de consumir esta api para hacer búsquedas.












































Manera de encontrar el director de una peli: entrar a movie.credits y buscar el que tenga en department "Directing" y en job "Director"

Manera de poder filtrar los directores de los resultados de una busqueda: 
    1)Primero tengo que guardar en un array todas las personas que me llegan como resultado de la busqueda. Esto significa ir haciendo fetch de las distintas paginas que me llegan como resultado.
    2)Tengo que filtrar los directores de entre todos los resultados.

Como encontrar las peliculas de un director:
    1) Acceder a Person - Movie credits con el id del director.
    2) Con el id de cada Movie Credit accedo a cada pelicula a la parte de Credits y busco a las personas que tienen el valor "Directing" en la propiedad "known_for_department" y cuyo id sea el id del director (que ya lo tengo desde un principio).
    3) Si encuentro que el director cumple esos requisitos entonces esa pelicula fué dirigida por el director.

    Por ejemplo: Director: Pedro Almodóvar (Id: 309).
    a) fetch('https://api.themoviedb.org/3/person/309/movie_credits', options)
    b) De cada resultado (pelicula) voy a acceder al id y voy a hacer un fetch de lo siguiente fetch('https://api.themoviedb.org/3/movie/219/credits', options). En este caso la pelicula es Volver (2006).
    c) En ese resultado busco a la persona que tenga el id del director (309), el valor "Directing" en la propiedad "known_for_department" y el valor "Director" en la propiedad "job" (esta propiedad verificar si existe, la misma ayuda a tener un resultado más especifico porque a veces un mismo director puede también tener el "job" de writer, screenplay etc).

 I M P O R T A N T E : DEBO CAMBIAR TODA LA LOGICA DE LA BUSQUEDA. SEARCHBAR DEBERÁ buscar lo que le llega por parametro y asignará lo que devuelva esa búsqueda a searchResults (el contexto). Ese objeto (results, page, total_pages) lo recibe ResultsContainer y muestra los resultados pertinentes (Directors o Movies) con un sistema de paginado. Cuando se haga click en la página 2 por ejemplo, se ejecutará un useEffect que hará un fetch al mismo endpoint pero con el parametro page=2. Por lo tanto ResultsContainer debe recibir de alguna manera el endpoint entero al que SearchBar hace fetch, además de tener un estado con el nro de la página actual para poder usar el useEffect y actualizar los resultados.
 o sea: a) Realizo la búsqueda en SearchBar y guardo el resultado en un objeto con las propiedades persons y movies (debo hacer dos fetch entonces en SearchBar).
        b) ResultsContainer recibe ese objeto y muestra lo pertinente...

Componentes: 
            DirectorContainerComponent: (Componente que se renderizará en la ruta director/directorId). TODO. Falta estilo.
            DirectorInfo: (parte donde está el nombre y la descripción del director. Por defecto debería abrir la  vista del director Pedro Almodóvar, porque si). TODO. Falta estilo.

            MovieContainerComponent: (component que se renderizará cuando se acceda a movie/movieId). TODO. Falta estilo.
            MovieContainer: (componente que hará la lógica para devolver las Movie). -- Falta logica para que cuando haga click en una peli me rediriga a la ruta correspondiente. TODO. Falta estilo.
            MovieByIdInfoContainer: (Componente que tendrá la informacion de la peli que se verá cuando se acceda a la ruta movie/movieId. Es tipo el DirectorInfo).
            Movie: (pelicula y serie chiquita que se ve en la vista del director y que está dentro de MovieContainer). TODO. Falta estilo.

            SearchBar: (barra de búsqueda). TODO. Falta estilo.
            SearchContainerComponent: (Componente que se renderizará cuando se acceda a search/:searchText). TODO: Falta estilo.
            Result: (resultado al realizar una búsqueda). TODO. Falta funcionalidad y estilo.
            ResultsContainer: (contenedor de results). TODO. Falta funcionalidad y estilo.
            
            Navbar: (navbar donde estará la SearchBar). Falta estilo.
            Footer: (footer en común para todsa las vistas). Falta estilo.




Colores: principal: #231942 #301934  #003262
         secundario: #309BFF
         terciario: #FFFFFF